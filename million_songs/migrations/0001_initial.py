# Generated by Django 3.1.5 on 2021-01-16 12:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'cds',
            },
        ),
        migrations.CreateModel(
            name='CdSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'cd_series',
            },
        ),
        migrations.CreateModel(
            name='Elements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'elements',
            },
        ),
        migrations.CreateModel(
            name='Units',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'units',
            },
        ),
        migrations.CreateModel(
            name='Songs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('cd', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='million_songs.cds')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='million_songs.units')),
            ],
            options={
                'db_table': 'songs',
            },
        ),
        migrations.CreateModel(
            name='Characters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('element', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='million_songs.elements')),
            ],
            options={
                'db_table': 'characters',
            },
        ),
        migrations.AddField(
            model_name='cds',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='million_songs.cdseries'),
        ),
        migrations.CreateModel(
            name='UnitMembers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='million_songs.characters')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='million_songs.units')),
            ],
            options={
                'db_table': 'unit_members',
                'unique_together': {('unit', 'member')},
            },
        ),
        migrations.CreateModel(
            name='SongSingers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('singer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='million_songs.characters')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='million_songs.songs')),
            ],
            options={
                'db_table': 'song_singers',
                'unique_together': {('song', 'singer')},
            },
        ),
    ]
